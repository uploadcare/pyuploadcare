# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests
on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - 'main'
    - 'feature/**'
    - 'version-3.x/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: false
    - name: Install dependencies
      run: |
        poetry install
    - name: Run linters
      run: make lint

  functional:
    needs: lint

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']
        include:
          - os: ubuntu-20.04
            python-version: '3.6'

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.1.15  # needed for py3.6
        virtualenvs-create: true
        virtualenvs-in-project: false
    - name: Install dependencies
      run: |
        poetry install
    - name: Test with pytest
      run: |
        make test-functional

  django:
    needs: functional
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # https://docs.djangoproject.com/en/3.2/faq/install/#what-python-version-can-i-use-with-django
        # this is a bit excessive, probably should run only before
        #   releasing new version
        python-version: ['3.7', '3.8', '3.9']
        django-version: ['2.2', '3.0', '3.1', '3.2']

        include:
          - python-version: '3.7'
            django-version: 1.11

          # django versions that support py3.10
          - python-version: '3.10'
            django-version: 3.2

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.1.15
        virtualenvs-create: true
        virtualenvs-in-project: false
    - name: Install dependencies
      run: |
        poetry install
    - name: Install specific Django version
      run: |
        poetry run pip install django~=${{ matrix.django-version }}.0
    - name: Test with pytest
      run: |
        make test-django

  django-legacy-py:
    needs: functional
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        # https://docs.djangoproject.com/en/3.2/faq/install/#what-python-version-can-i-use-with-django
        # this is a bit excessive, probably should run only before
        #   releasing new version
        python-version: ['3.6']
        django-version: ['1.11', '2.2', '3.0', '3.1', '3.2']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.1.15  # needed for py3.6
        virtualenvs-create: true
        virtualenvs-in-project: false
    - name: Install dependencies
      run: |
        poetry install
    - name: Install specific Django version
      run: |
        poetry run pip install django~=${{ matrix.django-version }}.0
    - name: Test with pytest
      run: |
        make test-django

  integration:
    needs: functional
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: false
    - name: Install dependencies
      run: |
        poetry install
    - name: Test with pytest
      run: |
        make test-integration
